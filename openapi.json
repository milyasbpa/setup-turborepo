{
  "openapi": "3.0.0",
  "info": {
    "title": "Math Learning App API",
    "version": "1.0.0",
    "description": "A comprehensive Duolingo-style math learning API with XP/streak system, lesson management, and progress tracking. Built with Express.js, TypeScript, Prisma, and Zod validation.",
    "contact": {
      "name": "API Support",
      "email": "support@mathlearningapp.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "success",
          "error",
          "timestamp"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "An error occurred"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z"
          }
        }
      },
      "ValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "type": "string",
                "example": "Validation failed"
              }
            }
          }
        ]
      },
      "SuccessResponse": {
        "type": "object",
        "required": [
          "success",
          "timestamp"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation successful"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z"
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "required": [
          "page",
          "limit",
          "total",
          "totalPages"
        ],
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "example": 1
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "example": 10
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "example": 25
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 3
          }
        }
      },
      "Lesson": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "order",
          "xpReward",
          "isActive",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "lesson-1",
            "description": "Unique lesson identifier"
          },
          "title": {
            "type": "string",
            "example": "Basic Arithmetic",
            "description": "Lesson title"
          },
          "description": {
            "type": "string",
            "example": "Learn addition and subtraction basics",
            "description": "Lesson description"
          },
          "order": {
            "type": "integer",
            "minimum": 1,
            "example": 1,
            "description": "Lesson order in curriculum"
          },
          "xpReward": {
            "type": "integer",
            "minimum": 0,
            "example": 10,
            "description": "XP reward for completing lesson"
          },
          "isActive": {
            "type": "boolean",
            "example": true,
            "description": "Whether lesson is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z",
            "description": "Lesson creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z",
            "description": "Lesson last update timestamp"
          },
          "progress": {
            "$ref": "#/components/schemas/LessonProgress"
          }
        }
      },
      "LessonProgress": {
        "type": "object",
        "required": [
          "isCompleted",
          "score",
          "bestScore",
          "attemptsCount"
        ],
        "properties": {
          "isCompleted": {
            "type": "boolean",
            "example": false,
            "description": "Whether lesson is completed"
          },
          "score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "example": 85,
            "description": "Current lesson score (0-100)"
          },
          "bestScore": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "example": 95,
            "description": "Best lesson score achieved"
          },
          "attemptsCount": {
            "type": "integer",
            "minimum": 0,
            "example": 3,
            "description": "Number of attempts made"
          }
        }
      },
      "Problem": {
        "type": "object",
        "required": [
          "id",
          "question",
          "problemType",
          "order",
          "difficulty"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "problem-1-1",
            "description": "Unique problem identifier"
          },
          "question": {
            "type": "string",
            "example": "What is 5 + 3?",
            "description": "The math problem question"
          },
          "problemType": {
            "type": "string",
            "enum": [
              "multiple_choice",
              "input"
            ],
            "example": "multiple_choice",
            "description": "Type of problem interaction"
          },
          "order": {
            "type": "integer",
            "minimum": 1,
            "example": 1,
            "description": "Problem order in lesson"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ],
            "example": "easy",
            "description": "Problem difficulty level"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemOption"
            },
            "description": "Multiple choice options (if applicable)"
          }
        }
      },
      "ProblemOption": {
        "type": "object",
        "required": [
          "id",
          "optionText",
          "order"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "option-1-1-a",
            "description": "Unique option identifier"
          },
          "optionText": {
            "type": "string",
            "example": "8",
            "description": "Option text/answer"
          },
          "order": {
            "type": "integer",
            "minimum": 1,
            "example": 1,
            "description": "Option display order"
          }
        }
      },
      "LessonWithProblems": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Lesson"
          },
          {
            "type": "object",
            "properties": {
              "problems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Problem"
                },
                "description": "List of problems in the lesson"
              }
            },
            "required": [
              "problems"
            ]
          }
        ]
      },
      "SubmitLessonRequest": {
        "type": "object",
        "required": [
          "attemptId",
          "answers"
        ],
        "properties": {
          "attemptId": {
            "type": "string",
            "example": "attempt-123-456",
            "description": "Unique attempt identifier for idempotency"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "description": "List of user answers",
            "minItems": 1
          }
        }
      },
      "Answer": {
        "type": "object",
        "required": [
          "problemId",
          "answer"
        ],
        "properties": {
          "problemId": {
            "type": "string",
            "example": "problem-1-1",
            "description": "ID of the problem being answered"
          },
          "answer": {
            "type": "string",
            "example": "8",
            "description": "User's answer to the problem"
          }
        }
      },
      "SubmitLessonResponse": {
        "type": "object",
        "required": [
          "success",
          "xpEarned",
          "totalXp",
          "streak",
          "lesson",
          "results"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Whether submission was successful"
          },
          "xpEarned": {
            "type": "integer",
            "minimum": 0,
            "example": 40,
            "description": "XP earned from this lesson attempt"
          },
          "totalXp": {
            "type": "integer",
            "minimum": 0,
            "example": 120,
            "description": "User's total XP after this lesson"
          },
          "streak": {
            "$ref": "#/components/schemas/StreakInfo"
          },
          "lesson": {
            "$ref": "#/components/schemas/LessonResult"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemResult"
            },
            "description": "Detailed results for each problem"
          }
        }
      },
      "StreakInfo": {
        "type": "object",
        "required": [
          "current",
          "best",
          "updated"
        ],
        "properties": {
          "current": {
            "type": "integer",
            "minimum": 0,
            "example": 3,
            "description": "Current daily streak"
          },
          "best": {
            "type": "integer",
            "minimum": 0,
            "example": 7,
            "description": "Best streak achieved"
          },
          "updated": {
            "type": "boolean",
            "example": true,
            "description": "Whether streak was updated with this lesson"
          }
        }
      },
      "LessonResult": {
        "type": "object",
        "required": [
          "completed",
          "score",
          "bestScore"
        ],
        "properties": {
          "completed": {
            "type": "boolean",
            "example": true,
            "description": "Whether lesson was completed"
          },
          "score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "example": 85,
            "description": "Score for this attempt (0-100)"
          },
          "bestScore": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "example": 95,
            "description": "Best score achieved for this lesson"
          }
        }
      },
      "ProblemResult": {
        "type": "object",
        "required": [
          "problemId",
          "userAnswer",
          "isCorrect",
          "correctAnswer",
          "explanation",
          "xpEarned"
        ],
        "properties": {
          "problemId": {
            "type": "string",
            "example": "problem-1-1",
            "description": "ID of the problem"
          },
          "userAnswer": {
            "type": "string",
            "example": "8",
            "description": "User's submitted answer"
          },
          "isCorrect": {
            "type": "boolean",
            "example": true,
            "description": "Whether the answer was correct"
          },
          "correctAnswer": {
            "type": "string",
            "example": "8",
            "description": "The correct answer"
          },
          "explanation": {
            "type": "string",
            "example": "5 + 3 = 8. Addition combines two numbers.",
            "description": "Explanation of the solution"
          },
          "xpEarned": {
            "type": "integer",
            "minimum": 0,
            "example": 10,
            "description": "XP earned for this problem"
          }
        }
      },
      "LessonListResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Lesson"
                }
              }
            }
          }
        ]
      },
      "LessonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/LessonWithProblems"
              }
            }
          }
        ]
      },
      "SubmitLessonResponseWrapper": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SubmitLessonResponse"
              }
            }
          }
        ]
      },
      "UserProfile": {
        "type": "object",
        "required": [
          "id",
          "email",
          "username",
          "firstName",
          "lastName",
          "displayName",
          "avatar",
          "xp",
          "streak",
          "lessonsCompleted",
          "totalLessons",
          "rank",
          "joinedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "1",
            "description": "Unique user identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "demo@mathapp.com",
            "description": "User's email address"
          },
          "username": {
            "type": "string",
            "nullable": true,
            "example": "mathlearner",
            "description": "User's username"
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "example": "John",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "example": "Doe",
            "description": "User's last name"
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "example": "John D.",
            "description": "User's display name"
          },
          "avatar": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/avatar.jpg",
            "description": "User's avatar URL"
          },
          "xp": {
            "type": "integer",
            "minimum": 0,
            "example": 250,
            "description": "User's total experience points"
          },
          "streak": {
            "$ref": "#/components/schemas/UserStreak"
          },
          "lessonsCompleted": {
            "type": "integer",
            "minimum": 0,
            "example": 5,
            "description": "Number of completed lessons"
          },
          "totalLessons": {
            "type": "integer",
            "minimum": 0,
            "example": 10,
            "description": "Total number of available lessons"
          },
          "rank": {
            "type": "string",
            "example": "Beginner",
            "description": "User's current rank based on XP"
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-01T00:00:00.000Z",
            "description": "Date when user joined"
          }
        }
      },
      "UserStreak": {
        "type": "object",
        "required": [
          "current",
          "longest",
          "lastActiveDate"
        ],
        "properties": {
          "current": {
            "type": "integer",
            "minimum": 0,
            "example": 7,
            "description": "Current daily learning streak"
          },
          "longest": {
            "type": "integer",
            "minimum": 0,
            "example": 15,
            "description": "Longest streak ever achieved"
          },
          "lastActiveDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2025-08-08",
            "description": "Last date user was active"
          }
        }
      },
      "UserStats": {
        "type": "object",
        "required": [
          "totalXp",
          "xpThisWeek",
          "xpThisMonth",
          "totalLessonsCompleted",
          "totalProblemsCompleted",
          "averageScore",
          "streak",
          "timeSpent",
          "achievements",
          "weeklyProgress"
        ],
        "properties": {
          "totalXp": {
            "type": "integer",
            "minimum": 0,
            "example": 420,
            "description": "Total experience points earned"
          },
          "xpThisWeek": {
            "type": "integer",
            "minimum": 0,
            "example": 80,
            "description": "XP earned this week"
          },
          "xpThisMonth": {
            "type": "integer",
            "minimum": 0,
            "example": 250,
            "description": "XP earned this month"
          },
          "totalLessonsCompleted": {
            "type": "integer",
            "minimum": 0,
            "example": 8,
            "description": "Total lessons completed"
          },
          "totalProblemsCompleted": {
            "type": "integer",
            "minimum": 0,
            "example": 45,
            "description": "Total problems solved"
          },
          "averageScore": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "example": 87.5,
            "description": "Average score across all lessons"
          },
          "streak": {
            "$ref": "#/components/schemas/UserStreak"
          },
          "timeSpent": {
            "$ref": "#/components/schemas/TimeSpent"
          },
          "achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Achievement"
            },
            "description": "List of user achievements"
          },
          "weeklyProgress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyProgress"
            },
            "description": "Progress for each day of the current week"
          }
        }
      },
      "TimeSpent": {
        "type": "object",
        "required": [
          "totalMinutes",
          "thisWeekMinutes",
          "averagePerSession"
        ],
        "properties": {
          "totalMinutes": {
            "type": "integer",
            "minimum": 0,
            "example": 240,
            "description": "Total time spent learning (minutes)"
          },
          "thisWeekMinutes": {
            "type": "integer",
            "minimum": 0,
            "example": 60,
            "description": "Time spent this week (minutes)"
          },
          "averagePerSession": {
            "type": "number",
            "minimum": 0,
            "example": 8.5,
            "description": "Average time per learning session (minutes)"
          }
        }
      },
      "Achievement": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "iconUrl",
          "unlockedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "first_lesson",
            "description": "Achievement identifier"
          },
          "title": {
            "type": "string",
            "example": "First Steps",
            "description": "Achievement title"
          },
          "description": {
            "type": "string",
            "example": "Complete your first lesson",
            "description": "Achievement description"
          },
          "iconUrl": {
            "type": "string",
            "example": "https://example.com/badge.png",
            "description": "Achievement icon URL"
          },
          "unlockedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-15T10:30:00.000Z",
            "description": "When achievement was unlocked"
          }
        }
      },
      "DailyProgress": {
        "type": "object",
        "required": [
          "date",
          "xpEarned",
          "lessonsCompleted",
          "timeSpent"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-08-08",
            "description": "Date of progress"
          },
          "xpEarned": {
            "type": "integer",
            "minimum": 0,
            "example": 25,
            "description": "XP earned on this date"
          },
          "lessonsCompleted": {
            "type": "integer",
            "minimum": 0,
            "example": 2,
            "description": "Lessons completed on this date"
          },
          "timeSpent": {
            "type": "integer",
            "minimum": 0,
            "example": 15,
            "description": "Time spent learning (minutes)"
          }
        }
      },
      "UserProfileResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        ]
      },
      "UserStatsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/UserStats"
              }
            }
          }
        ]
      },
      "HealthStatus": {
        "type": "object",
        "required": [
          "status",
          "service",
          "timestamp",
          "uptime",
          "version"
        ],
        "properties": {
          "status": {
            "type": "string",
            "example": "OK",
            "description": "Current health status"
          },
          "service": {
            "type": "string",
            "example": "backend",
            "description": "Service name"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z",
            "description": "Health check timestamp"
          },
          "uptime": {
            "type": "number",
            "example": 3600.123,
            "description": "Service uptime in seconds"
          },
          "version": {
            "type": "string",
            "example": "1.0.0",
            "description": "Service version"
          },
          "environment": {
            "type": "string",
            "example": "development",
            "description": "Current environment"
          },
          "dependencies": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "healthy",
                    "unhealthy",
                    "degraded"
                  ],
                  "example": "healthy"
                },
                "responseTime": {
                  "type": "number",
                  "example": 15.5
                },
                "lastCheck": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-08-08T01:00:00.000Z"
                }
              }
            },
            "description": "Status of service dependencies"
          }
        }
      },
      "HealthResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/HealthStatus"
              }
            }
          }
        ]
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "name",
          "email",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1,
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "example": "John Doe",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com",
            "description": "User's email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z",
            "description": "User creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-08T01:00:00.000Z",
            "description": "User last update timestamp"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "example": "John Doe",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com",
            "description": "User's email address"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "example": "John Doe",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com",
            "description": "User's email address"
          }
        },
        "description": "At least one field must be provided"
      },
      "UserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        ]
      },
      "UsersListResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/PaginationMeta"
              }
            }
          }
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request - Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints for monitoring and status verification"
    },
    {
      "name": "Lessons",
      "description": "Math lesson management - browse lessons, get problems, submit answers"
    },
    {
      "name": "Profile",
      "description": "User profile and statistics - XP, streak, and learning progress"
    }
  ],
  "paths": {
    "/api/lessons": {
      "get": {
        "summary": "Get all lessons",
        "description": "Retrieve all math lessons with user progress and completion status",
        "tags": [
          "Lessons"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "description": "User ID to get personalized progress (defaults to demo user)",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Lessons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonListResponse"
                },
                "example": {
                  "success": true,
                  "message": "Lessons retrieved successfully",
                  "data": [
                    {
                      "id": "lesson-1",
                      "title": "Basic Arithmetic",
                      "description": "Learn addition and subtraction",
                      "order": 1,
                      "xpReward": 10,
                      "isActive": true,
                      "progress": {
                        "isCompleted": false,
                        "score": 0,
                        "bestScore": 0,
                        "attemptsCount": 0
                      }
                    }
                  ],
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/lessons/stats": {
      "get": {
        "summary": "Get lesson statistics",
        "description": "Retrieve overall lesson statistics and metrics",
        "tags": [
          "Lessons"
        ],
        "responses": {
          "200": {
            "description": "Lesson statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "totalLessons": {
                              "type": "integer",
                              "example": 3
                            },
                            "activeLessons": {
                              "type": "integer",
                              "example": 3
                            },
                            "averageCompletion": {
                              "type": "number",
                              "example": 65.5
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "message": "Lesson statistics retrieved successfully",
                  "data": {
                    "totalLessons": 3,
                    "activeLessons": 3,
                    "averageCompletion": 65.5
                  },
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/lessons/{id}": {
      "get": {
        "summary": "Get lesson by ID",
        "description": "Retrieve a specific lesson with all its problems (frontend-safe, excludes correct answers)",
        "tags": [
          "Lessons"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Lesson ID",
            "example": "lesson-1"
          }
        ],
        "responses": {
          "200": {
            "description": "Lesson retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonResponse"
                },
                "example": {
                  "success": true,
                  "message": "Lesson retrieved successfully",
                  "data": {
                    "id": "lesson-1",
                    "title": "Basic Arithmetic",
                    "description": "Learn addition and subtraction",
                    "order": 1,
                    "xpReward": 10,
                    "isActive": true,
                    "problems": [
                      {
                        "id": "problem-1-1",
                        "question": "What is 5 + 3?",
                        "problemType": "multiple_choice",
                        "order": 1,
                        "difficulty": "easy",
                        "options": [
                          {
                            "id": "option-1-1-a",
                            "optionText": "7",
                            "order": 1
                          },
                          {
                            "id": "option-1-1-b",
                            "optionText": "8",
                            "order": 2
                          }
                        ]
                      }
                    ]
                  },
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/lessons/{id}/submit": {
      "post": {
        "summary": "Submit lesson answers",
        "description": "Submit answers for a lesson and get results with XP and streak calculation (idempotent)",
        "tags": [
          "Lessons"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Lesson ID",
            "example": "lesson-1"
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "description": "User ID (defaults to demo user)",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitLessonRequest"
              },
              "example": {
                "attemptId": "attempt-123-456",
                "answers": [
                  {
                    "problemId": "problem-1-1",
                    "answer": "8"
                  },
                  {
                    "problemId": "problem-1-2",
                    "answer": "15"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lesson submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitLessonResponseWrapper"
                },
                "example": {
                  "success": true,
                  "message": "Lesson submitted successfully",
                  "data": {
                    "success": true,
                    "xpEarned": 40,
                    "totalXp": 120,
                    "streak": {
                      "current": 3,
                      "best": 7,
                      "updated": true
                    },
                    "lesson": {
                      "completed": true,
                      "score": 85,
                      "bestScore": 95
                    },
                    "results": [
                      {
                        "problemId": "problem-1-1",
                        "userAnswer": "8",
                        "isCorrect": true,
                        "correctAnswer": "8",
                        "explanation": "5 + 3 = 8",
                        "xpEarned": 10
                      }
                    ]
                  },
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Submission already exists (idempotent operation)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve user profile with math learning stats, XP, streak, and progress",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "description": "User ID to get profile for (defaults to demo user)",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                },
                "example": {
                  "success": true,
                  "message": "User profile retrieved successfully",
                  "data": {
                    "id": "1",
                    "email": "demo@mathapp.com",
                    "username": "mathlearner",
                    "firstName": "John",
                    "lastName": "Doe",
                    "displayName": "John D.",
                    "avatar": "https://example.com/avatar.jpg",
                    "xp": 250,
                    "streak": {
                      "current": 7,
                      "longest": 15,
                      "lastActiveDate": "2025-08-08"
                    },
                    "lessonsCompleted": 5,
                    "totalLessons": 10,
                    "rank": "Intermediate",
                    "joinedAt": "2025-07-01T00:00:00.000Z"
                  },
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/profile/stats": {
      "get": {
        "summary": "Get user learning statistics",
        "description": "Retrieve detailed user learning statistics including XP, time spent, achievements, and weekly progress",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "description": "User ID to get stats for (defaults to demo user)",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatsResponse"
                },
                "example": {
                  "success": true,
                  "message": "User statistics retrieved successfully",
                  "data": {
                    "totalXp": 420,
                    "xpThisWeek": 80,
                    "xpThisMonth": 250,
                    "totalLessonsCompleted": 8,
                    "totalProblemsCompleted": 45,
                    "averageScore": 87.5,
                    "streak": {
                      "current": 7,
                      "longest": 15,
                      "lastActiveDate": "2025-08-08"
                    },
                    "timeSpent": {
                      "totalMinutes": 240,
                      "thisWeekMinutes": 60,
                      "averagePerSession": 8.5
                    },
                    "achievements": [
                      {
                        "id": "first_lesson",
                        "title": "First Steps",
                        "description": "Complete your first lesson",
                        "iconUrl": "https://example.com/badge.png",
                        "unlockedAt": "2025-07-15T10:30:00.000Z"
                      }
                    ],
                    "weeklyProgress": [
                      {
                        "date": "2025-08-08",
                        "xpEarned": 25,
                        "lessonsCompleted": 2,
                        "timeSpent": 15
                      }
                    ]
                  },
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Get service health status",
        "description": "Returns the current health status of the service including uptime, version, and dependency status",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "Service health status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "status": "OK",
                    "service": "backend",
                    "timestamp": "2025-08-08T01:00:00.000Z",
                    "uptime": 3600.123,
                    "version": "1.0.0",
                    "environment": "development"
                  },
                  "message": "Health check successful",
                  "timestamp": "2025-08-08T01:00:00.000Z"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a paginated list of users with optional search and sorting",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term to filter users by name or email"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "email",
                "createdAt"
              ],
              "default": "id"
            },
            "description": "Field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersListResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with the provided information",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              },
              "example": {
                "name": "John Doe",
                "email": "john@example.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "summary": "Update user by ID",
        "description": "Update a specific user's information",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              },
              "example": {
                "name": "John Smith",
                "email": "johnsmith@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "description": "Delete a specific user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  }
}